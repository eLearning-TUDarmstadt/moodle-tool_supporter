{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!

    @template tool_supporter/course_table
    Template which outputs a table of courses.

    Classes required for JS:
    * dataTables

    Context variables required for this template:
    * courses - array of arrays: course details to be displayed in a table.

    Example Input structure:
    Array ( [courses] =>
    	Array
    	(
    		[12] => Array (
	            [id] => 51
	            [fullname] => FB01 Kurs full name
	            [visible] => 1
	            [level_two] => FB01 Rechts- und Wirtschaftswissenschaften
	            [level_one] => WiSe 2016/17 )
    		[13] => Array (
	            [id] => 52
	            [fullname] => FB02 Kurs full name
	            [visible] => 1
	            [level_two] => FB02 Gesellschafts- und Geschichtswissenschaften
	            [level_one] => WiSe 2016/17 )
    	)
    )

}}
<div data-region="course_table" class="card" style="border:1px solid #8a8a8a">
	<div class = "card-header">
		<div class="row">
		    <div class="col-sm-6"><h2>{{#str}}courses{{/str}}</h2></div>
		    <div class="col-sm-6 pull-right"><div class="pull-right"><button class="btn" id="btn_refresh_courses">{{#pix}} a/refresh, core, refresh {{/pix}}</button></div></div>
		</div>
	</div>

    <div id="course_table_filtering" style="visibility: hidden;">
        <div class="btn-toolbar" role="toolbar">
            <div class="btn-group" role="group">
                <select id="course_table_column_chooser" class="form-control-">
                    <!-- Additional Options will be added later with javascript -->
                    <option selected value="-1">{{#str}}all{{/str}}</option>
                </select>
            </div>
            <div class="btn-group" role="group" style="width: 55%">
                <input type="text" id="course_table_search_input" class="form-control form-control-sm" placeholder="Search">
            </div>
            <div class="col col-md-2">
                <button type="button" class="btn" id="courses_clear_filters" style="visibility: hidden">&times; {{#str}}removeall, filters{{/str}}</button>
            </div>
        </div>

        <!-- Filtering for course table -->
        <div id ="course_filtering" data-region = "course_filtering">
           <ul class="nav nav-tabs nav-justified">
             <!-- Filter course list by selecting first level category-->
             <li class="nav-item dropdown">
               <a class = "nav-link dropdown-toggle" href="javascript:void(0)" data-toggle="dropdown">{{label_level_1}}<span class="caret"></span></a>

               <ul class="dropdown-menu" id="courses_levelonedropdown">
                 {{#uniquelevelones}}
                    <li class = "dropdown-item" style="padding: 0 0 0 1.5rem"> <!-- padding: top, right, bottom, left -->
                        <label><input type="checkbox" value="{{{.}}}" name="courses_levelonecheckbox" id="courses_levelonecheckbox"> {{{.}}}</label>
                    </li>
                 {{/uniquelevelones}}
               </ul>
             </li>
            <!-- Filter course list by selecting second level category -->
             <li class="nav-item dropdown">
               <a class = "nav-link dropdown-toggle" href="javascript:void(0)" data-toggle="dropdown">{{label_level_2}}<span class="caret"></span></a>
               <ul class="dropdown-menu" id="courses_leveltwodropdown">
                 {{#uniqueleveltwoes}}
                    <li class = "dropdown-item" style="padding: 0 0 0 1.5rem"> <!-- padding: top, right, bottom, left -->
                        <label><input type="checkbox" value="{{{.}}}" name="courses_leveltwocheckbox"  id="courses_leveltwocheckbox"> {{{.}}}</label>
                    </li>
                 {{/uniqueleveltwoes}}
               </ul>
             </li>
          </ul>
        </div>
    </div>
	
	<div class = "table table-responsive">
	  <table id = "courseTable" class="stripe hover row-border compact" cellspacing="0" width="100%">
	    <thead>
	      <tr>
	        <th>ID  </th>
	        <th>{{#str}}shortnamecourse{{/str}}</th>
	        <th>{{#str}}fullnamecourse{{/str}}</th>
	        <th>{{label_level_1}}</th>
	        <th>{{label_level_2}}</th>
	        <th>{{#str}}visible{{/str}}</th>
	      </tr>
	    </thead>
	    <tbody>
	    </tbody>
	  </table>
	</div>
	
	<span class="loading-icon text-center" id="courseTable-loadingIcon">{{#pix}} i/loading, core, {{#str}} loading {{/str}} {{/pix}}</span>
</div>

{{#js}}
require(['tool_supporter/load_information', 'jquery', 'core/ajax', 'core/notification', 'core/templates',
         'tool_supporter/datatables', 'tool_supporter/table_filter'],
    function(loadInformation, $, ajax, notification, templates, datatables, tableFilter) {

		var columns1 = [
                        {data: 'id', name: 'ID'},
                        {data: 'shortname', "visible": false, "searchable": true, name: '{{#str}}shortnamecourse{{/str}}'},
                        {data: 'fullname', name: '{{#str}}fullnamecourse{{/str}}'},
                        {data: 'level_one', name: '{{label_level_1}}'},
                        {data: 'level_two', name: '{{label_level_2}}'},
                        {data: 'visible', name: '{{#str}}visible{{/str}}'}
                       ];
		
        // Convert the table to dataTable and apply Filtering.
        datatables.dataTable_ajax('#courseTable', 'tool_supporter_get_courses',{}, 'courses', columns1);

        // Refresh this table.
        loadInformation.click_on_refresh('#userTable', 'tool_supporter_get_users', {}, 'users', columns1);

        // Load detailed information about the clicked course.
        loadInformation.click_on_course('#courseTable'); //Load information about the clicked course

        // Search the table.
        tableFilter.search_table('#courseTable', '#course_table_column_chooser', '#course_table_search_input', columns1);

        // Clear filters when button is clicked.
        tableFilter.courses_clear_filters('#courseTable');
  });
{{/js}}
